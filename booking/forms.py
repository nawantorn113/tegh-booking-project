from django import forms
from django.contrib.auth.forms import PasswordChangeForm
from .models import Booking, Profile, Room # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ import Room ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
from django.contrib.auth.models import User

class BookingForm(forms.ModelForm):
    class Meta:
        model = Booking
        fields = [
            'room', 'title', 'description', 'start_time', 'end_time',
            'participant_count', 'participants', 'status', # ‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï: ‡∏õ‡∏Å‡∏ï‡∏¥ status ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ User ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏≠‡∏á ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å
            'additional_requests', 'attachment', 'chairman', 'additional_notes'
        ]
        widgets = {
            'start_time': forms.DateTimeInput(attrs={'type': 'datetime-local'}),
            'end_time': forms.DateTimeInput(attrs={'type': 'datetime-local'}),
             # Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö participants ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ Select2 ‡∏´‡∏£‡∏∑‡∏≠ Autocomplete widget ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
             # forms.SelectMultiple ‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤ user ‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å
             'participants': forms.SelectMultiple(attrs={'class': 'select2 form-control', 'data-placeholder': '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°'}),
             'description': forms.Textarea(attrs={'rows': 3}),
             'additional_requests': forms.Textarea(attrs={'rows': 3}),
             'additional_notes': forms.Textarea(attrs={'rows': 3}),
             # ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ã‡πà‡∏≠‡∏ô Field 'room' ‡πÉ‡∏ô Template ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏±‡∏Å‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å URL
             'room': forms.HiddenInput(),
             # ‡∏ã‡πà‡∏≠‡∏ô Field 'status' ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ user ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
             'status': forms.HiddenInput(),
        }
        labels = {
            'room': '‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
            'title': '‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
            'description': '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
            'start_time': '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô',
            'end_time': '‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î',
            'participant_count': '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° (‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)',
            'participants': '‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)',
            'status': '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
            'additional_requests': '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡πÅ‡∏ü, ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå)',
            'attachment': '‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö)',
            'chairman': '‡∏õ‡∏£‡∏∞‡∏ò‡∏≤‡∏ô‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)',
            'additional_notes': '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
        }
        help_texts = {
            'participants': '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å User ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏î‡πâ‡∏ß‡∏¢',
            'attachment': '‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå PDF, Word, Excel ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á',
        }

class ProfileForm(forms.ModelForm):
     # ‡πÄ‡∏û‡∏¥‡πà‡∏° Field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User model ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
     first_name = forms.CharField(label='‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á', max_length=150, required=False)
     last_name = forms.CharField(label='‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', max_length=150, required=False)
     email = forms.EmailField(label='‡∏≠‡∏µ‡πÄ‡∏°‡∏•', required=False)

     class Meta:
        model = Profile
        # fields = ['department', 'phone', 'avatar'] # ‡πÄ‡∏≠‡∏≤ field User ‡∏°‡∏≤‡∏£‡∏ß‡∏°
        fields = ['first_name', 'last_name', 'email', 'department', 'phone', 'avatar']
        labels = {
            'department': '‡πÅ‡∏ú‡∏ô‡∏Å/‡∏ù‡πà‡∏≤‡∏¢',
            'phone': '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
            'avatar': '‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå',
        }
        widgets = {
            'phone': forms.TextInput(attrs={'placeholder': '‡πÄ‡∏ä‡πà‡∏ô 081-XXX-XXXX'}),
        }

     # ‡∏ï‡πâ‡∏≠‡∏á override __init__ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á User ‡∏°‡∏≤‡πÉ‡∏™‡πà
     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
         # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡∏°‡∏µ instance) ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å user ‡∏°‡∏≤‡πÉ‡∏™‡πà
         if self.instance and self.instance.user:
             self.fields['first_name'].initial = self.instance.user.first_name
             self.fields['last_name'].initial = self.instance.user.last_name
             self.fields['email'].initial = self.instance.user.email

     # ‡∏ï‡πâ‡∏≠‡∏á override save ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡∏î‡πâ‡∏ß‡∏¢
     def save(self, commit=True):
         profile = super().save(commit=False)
         user = profile.user
         user.first_name = self.cleaned_data['first_name']
         user.last_name = self.cleaned_data['last_name']
         user.email = self.cleaned_data['email'] # ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö email ‡∏ã‡πâ‡∏≥‡πÉ‡∏ô view
         if commit:
             user.save()
             profile.save()
         return profile


class CustomPasswordChangeForm(PasswordChangeForm):
    # ‡∏õ‡∏£‡∏±‡∏ö Label ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
     old_password = forms.CharField(
         label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡πà‡∏≤",
         strip=False,
         widget=forms.PasswordInput(attrs={'autocomplete': 'current-password', 'autofocus': True}),
     )
     new_password1 = forms.CharField(
         label="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà",
         widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
         strip=False,
     )
     new_password2 = forms.CharField(
         label="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà",
         strip=False,
         widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
     )


class RoomForm(forms.ModelForm):
    class Meta:
        model = Room
        # --- üü¢ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ Field ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© üü¢ ---
        fields = ['name', 'building', 'floor', 'capacity', 'equipment_in_room', 'image']
        # --- ------------------------------------ ---

        # --- ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Label ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‚úÖ ---
        labels = {
            'name': '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
            'building': '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£',
            'floor': '‡∏ä‡∏±‡πâ‡∏ô',
            'capacity': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ (‡∏Ñ‡∏ô)',
            'equipment_in_room': '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á',
            'image': '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)',
        }
        # --- ----------------------------- ---

        help_texts = {
            'equipment_in_room': '‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå, ‡πÑ‡∏ß‡∏ó‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î',
            'image': '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û .jpg, .png',
            'capacity': '‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',
        }
        widgets = {
            'name': forms.TextInput(attrs={'placeholder': ''}),
            'building': forms.TextInput(attrs={'placeholder': ''}),
            'floor': forms.TextInput(attrs={'placeholder': ''}),
            'capacity': forms.NumberInput(attrs={'min': '1'}),
            'equipment_in_room': forms.Textarea(attrs={'rows': 5, 'placeholder': ''}),
            'image': forms.ClearableFileInput(attrs={'accept': 'image/*'}), # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        }